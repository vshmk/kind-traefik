apiVersion: v1
kind: Namespace
metadata:
  name: test-app-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: test-app-nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: fabiocicerchia/nginx-lua:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
        volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: test-app-nginx
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: nginx
  namespace: test-app-nginx
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: PathPrefix(`/nginx`)
    middlewares:
      - name: inflightreq
    services:
    - kind: Service
      name: nginx
      port: 80
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: inflightreq
  namespace: test-app-nginx
spec:
  inFlightReq:
    amount: 5
    sourceCriterion:
      requestHeaderName: X-Forwarded-For
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: test-app-nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       80;
          server_name  _;
          location / {
            default_type 'text/plain';
            content_by_lua_block {
              ngx.sleep(1)
              ngx.say('Hello world!')
            }
          }
        }
    }
